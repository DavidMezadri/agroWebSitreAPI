// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using agroWebSitreAPI.Infra;

#nullable disable

namespace agroWebSitreAPI.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    partial class ConnectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("agroWebSitreAPI.Domain.Model.Analysis.Analysis", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("currentAl")
                        .HasColumnType("real");

                    b.Property<float>("currentB")
                        .HasColumnType("real");

                    b.Property<float>("currentCa")
                        .HasColumnType("real");

                    b.Property<float>("currentCo")
                        .HasColumnType("real");

                    b.Property<float>("currentCtc")
                        .HasColumnType("real");

                    b.Property<float>("currentCu")
                        .HasColumnType("real");

                    b.Property<float>("currentFe")
                        .HasColumnType("real");

                    b.Property<float>("currentHal")
                        .HasColumnType("real");

                    b.Property<float>("currentK")
                        .HasColumnType("real");

                    b.Property<float>("currentMg")
                        .HasColumnType("real");

                    b.Property<float>("currentMn")
                        .HasColumnType("real");

                    b.Property<float>("currentMo")
                        .HasColumnType("real");

                    b.Property<float>("currentP")
                        .HasColumnType("real");

                    b.Property<float>("currentPh")
                        .HasColumnType("real");

                    b.Property<float>("currentS")
                        .HasColumnType("real");

                    b.Property<float>("currentV")
                        .HasColumnType("real");

                    b.Property<float>("currentZn")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("idFarm")
                        .HasColumnType("integer");

                    b.Property<float>("missingAl")
                        .HasColumnType("real");

                    b.Property<float>("missingB")
                        .HasColumnType("real");

                    b.Property<float>("missingCa")
                        .HasColumnType("real");

                    b.Property<float>("missingCo")
                        .HasColumnType("real");

                    b.Property<float>("missingCtc")
                        .HasColumnType("real");

                    b.Property<float>("missingCu")
                        .HasColumnType("real");

                    b.Property<float>("missingFe")
                        .HasColumnType("real");

                    b.Property<float>("missingHal")
                        .HasColumnType("real");

                    b.Property<float>("missingK")
                        .HasColumnType("real");

                    b.Property<float>("missingMg")
                        .HasColumnType("real");

                    b.Property<float>("missingMn")
                        .HasColumnType("real");

                    b.Property<float>("missingMo")
                        .HasColumnType("real");

                    b.Property<float>("missingP")
                        .HasColumnType("real");

                    b.Property<float>("missingPh")
                        .HasColumnType("real");

                    b.Property<float>("missingS")
                        .HasColumnType("real");

                    b.Property<float>("missingV")
                        .HasColumnType("real");

                    b.Property<float>("missingZn")
                        .HasColumnType("real");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("idFarm");

                    b.ToTable("analysis");
                });

            modelBuilder.Entity("agroWebSitreAPI.Domain.Model.FarmAggregate.Farm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("area")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("id_farm")
                        .HasColumnType("integer");

                    b.Property<string>("localize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nameFarm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_farm");

                    b.ToTable("farm");
                });

            modelBuilder.Entity("agroWebSitreAPI.Domain.Model.UserAggregate.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_admin")
                        .HasColumnType("boolean");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("agroWebSitreAPI.Domain.Model.Analysis.Analysis", b =>
                {
                    b.HasOne("agroWebSitreAPI.Domain.Model.FarmAggregate.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("idFarm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("agroWebSitreAPI.Domain.Model.FarmAggregate.Farm", b =>
                {
                    b.HasOne("agroWebSitreAPI.Domain.Model.UserAggregate.User", "User")
                        .WithMany()
                        .HasForeignKey("id_farm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
